####Probability of lead calculator#####

problead <- function(x) {
	cand1prop <- cand1/100							#convert numbers to proportions for stdev calculation
	cand2prop <- cand2/100
	canddiff <- cand1 - cand2 						#difference between candidates
	sterr <- (sqrt ((cand1prop*(1-cand1prop))/sampsize) + ((cand2prop*(1-cand2prop))/sampsize) )*100 #standard error for difference between candidates
	
	sims <- 1000000													#number of simulations to run
	canddiffdist <- rnorm(sims,canddiff,sterr)						#simulations for difference between candidates
	data <- as.data.frame(cbind(canddiffdist))				#create dataset of simulations
	data$cand1win <- ifelse(canddiffdist > 0.49, 1, 0)		#code 1 if difference between candidates is positive (cand1 wins)
	data$cand2win <- ifelse(canddiffdist < -0.49, 1, 0)		#code 1 if difference between candidates is negative (cand2 wins)
	data$candtie <- ifelse(data$cand1win == 0 & data$cand2win==0, 1, 0)		#code 1 if difference between candidates rounds to 0
	results <- matrix(c(mean(data$cand1win)*100, mean(data$cand2win)*100, mean(data$candtie)*100)) #create matrix of results: probability of each candidate being ahead in simulations
	rownames(results) <- c("Candidate 1 Ahead", "Candidate 2 Ahead", "Candidates Tied") 
	colnames(results) <- c("Prob")							
	return(results)									
}


###### Inputs needed ######

sampsize <- 600 	#sample size
cand1 <- 25		#poll value for candidate 1
cand2 <- 23		#poll value for candidate 2

##### Execute ######

problead()
